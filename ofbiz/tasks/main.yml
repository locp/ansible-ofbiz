---
# tasks file for ofbiz
- name: Group for ofbiz user
  group:
    name: "{{ ofbiz_group }}"

- name: ofbiz user
  user:
    comment: Apache OFBiz
    group: "{{ ofbiz_group }}"
    home: "{{ ofbiz_user_home_directory }}"
    name: "{{ ofbiz_user }}"

- name: Import OpenJDK tasks
  import_tasks: openjdk.yml
  when: ofbiz_install_openjdk

- name: Test if OFBiz is already installed
  stat:
    path: "{{ ofbiz_user_home_directory }}/apache-ofbiz-{{ ofbiz_version }}"
  register: ofbiz_installation

- name: Find closest Apache mirror
  uri:
    return_content: yes
    url: https://www.apache.org/dyn/closer.cgi?as_json=1
  register: ofbiz_apache_mirror_data
  when:
    - ofbiz_installation.stat.exists != True
    - ofbiz_download_path == ofbiz_apache_download_path

- name: Change download path to closest mirror
  set_fact:
    ofbiz_download_path: "{{ ofbiz_apache_mirror_data.json.preferred }}ofbiz"
  when:
    - ofbiz_installation.stat.exists != True
    - ofbiz_download_path == ofbiz_apache_download_path

- name: Download and extract the OFBiz software
  unarchive:
    creates: "{{ ofbiz_user_home_directory }}/apache-ofbiz-{{ ofbiz_version }}/LICENSE"
    dest: "{{ ofbiz_user_home_directory }}"
    group: "{{ ofbiz_group }}"
    owner: "{{ ofbiz_user }}"
    remote_src: yes
    src: "{{ ofbiz_download_path }}/apache-ofbiz-{{ ofbiz_version }}.zip"
  notify:
    - create admin user
  when:
    - ofbiz_installation.stat.exists

- name: Stop/start scripts
  copy:
    dest: "{{ ofbiz_user_home_directory }}/apache-ofbiz-{{ ofbiz_version }}/{{ item }}"
    group: "{{ ofbiz_group }}"
    mode: 0755
    owner: "{{ ofbiz_user }}"
    src: "{{ item }}"
  with_items:
    - startofbiz.sh
    - stopofbiz.sh

- name: Configure RC script for Ubuntu
  template:
    dest: /etc/init.d/ofbiz
    mode: 0755
    src: rc.ofbiz.j2

- name: Configure OFBiz service
  service:
    enabled: yes
    name: ofbiz
    state: started
